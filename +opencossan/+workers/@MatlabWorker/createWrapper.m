function createWrapper(Xobj,Nfid)
%CREATEWRAPPER This function create a wrapper for the Mio Object
% The method requires an  integer file identifie (fid) of an open file. 
%
% See Also: http://cossan.co.uk/wiki/index.php/createWrapper@Mio
%
% Author: Edoardo Patelli
% Institute for Risk and Uncertainty, University of Liverpool, UK
% email address: openengine@cossan.co.uk
% Website: http://www.cossan.co.uk

% =====================================================================
% This file is part of openCOSSAN.  The open general purpose matlab
% toolbox for numerical analysis, risk and uncertainty quantification.
%
% openCOSSAN is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License.
%
% openCOSSAN is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
%  You should have received a copy of the GNU General Public License
%  along with openCOSSAN.  If not, see <http://www.gnu.org/licenses/>.
% =====================================================================

%% Create a wrapper file
fprintf(Nfid, '%% MIO wrapper generated by the method @mio/createWrapper \n');
fprintf(Nfid, '%% on %s \n',datestr(now));
fprintf(Nfid, '%% Load input from file \n');

% TODO: it should be in a solver loop
if ~isempty(Xobj.Spath)
    fprintf(Nfid,'addpath(''%s'');\n',Xobj.Spath);
end
if ~isempty(Xmio.Sadditionalpath)
    fprintf(Nfid,'addpath(''%s'');\n',Xobj.Sadditionalpath);
end

% Load Input
fprintf(Nfid, ' load %s; \n',Xobj.SwrapperInputName);
if Xobj.Lfunction 
    % the mio is a function
    fprintf(Nfid, ' %% call function \n');
    if Xobj.Liostructure
        fprintf(Nfid,' Toutput = %s(Tinput); \n',Xobj.Sfile);
    else
        fprintf(Nfid,' Moutput = %s(Minput); \n', Xobj.Sfile);
    end
else
    % the mio is a script
    fprintf(Nfid, ' %% call script \n');
    if ~isempty(Xobj.Sscript) % the script is in the field Sscript
        fprintf(Nfid,'%s\n',Xobj.Sscript);
    else % the script is in a file
        % copy the content of the script file in mioWrapper.m
        Nfid_script = fopen([fullfile(Xobj.Spath,Xobj.Sfile) '.m'],'r');
        line_id = 0; 
        while 1
            Stline = fgetl(Nfid_script);    % read one line at time
            line_id = line_id + 1;            
            if ~ischar(Stline)      % EOF found
                OpenCossan.cossanDisp(['EOF found after ' num2str(line_id) ' lines'],3);
                break
            end
            fprintf(Nfid,'%s\n',Stline);
        end
        fclose(Nfid_script);
    end
end
fprintf(Nfid, '%% Save output; \n');
if Xm.Liostructure
    fprintf(Nfid, ' save %s Toutput; \n',Xobj.SwrapperOutputName);
else
    fprintf(Nfid, ' save %s Moutput; \n',Xobj.SwrapperOutputName);
end